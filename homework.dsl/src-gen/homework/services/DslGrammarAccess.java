/*
 * generated by Xtext 2.25.0
 */
package homework.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CourseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.Course");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCourseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCourseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHomeworkKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cHomeworkAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cHomeworkHomeworkParserRuleCall_4_2_0 = (RuleCall)cHomeworkAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cHomeworkAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cHomeworkHomeworkParserRuleCall_4_3_1_0 = (RuleCall)cHomeworkAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPersonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPersonAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPersonPersonParserRuleCall_5_2_0 = (RuleCall)cPersonAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPersonAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPersonPersonParserRuleCall_5_3_1_0 = (RuleCall)cPersonAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Course returns Course:
		//    {Course}
		//    'Course'
		//    name=EString
		//    '{'
		//        ('homework' '{' homework+=Homework ( "," homework+=Homework)* '}' )?
		//        ('person' '{' person+=Person ( "," person+=Person)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Course}
		//'Course'
		//name=EString
		//'{'
		//    ('homework' '{' homework+=Homework ( "," homework+=Homework)* '}' )?
		//    ('person' '{' person+=Person ( "," person+=Person)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Course}
		public Action getCourseAction_0() { return cCourseAction_0; }
		
		//'Course'
		public Keyword getCourseKeyword_1() { return cCourseKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('homework' '{' homework+=Homework ( "," homework+=Homework)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'homework'
		public Keyword getHomeworkKeyword_4_0() { return cHomeworkKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//homework+=Homework
		public Assignment getHomeworkAssignment_4_2() { return cHomeworkAssignment_4_2; }
		
		//Homework
		public RuleCall getHomeworkHomeworkParserRuleCall_4_2_0() { return cHomeworkHomeworkParserRuleCall_4_2_0; }
		
		//( "," homework+=Homework)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//homework+=Homework
		public Assignment getHomeworkAssignment_4_3_1() { return cHomeworkAssignment_4_3_1; }
		
		//Homework
		public RuleCall getHomeworkHomeworkParserRuleCall_4_3_1_0() { return cHomeworkHomeworkParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('person' '{' person+=Person ( "," person+=Person)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'person'
		public Keyword getPersonKeyword_5_0() { return cPersonKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//person+=Person
		public Assignment getPersonAssignment_5_2() { return cPersonAssignment_5_2; }
		
		//Person
		public RuleCall getPersonPersonParserRuleCall_5_2_0() { return cPersonPersonParserRuleCall_5_2_0; }
		
		//( "," person+=Person)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//person+=Person
		public Assignment getPersonAssignment_5_3_1() { return cPersonAssignment_5_3_1; }
		
		//Person
		public RuleCall getPersonPersonParserRuleCall_5_3_1_0() { return cPersonPersonParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.Person");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTeacherParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStudentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Person returns Person:
		//    Teacher | Student;
		@Override public ParserRule getRule() { return rule; }
		
		//Teacher | Student
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Teacher
		public RuleCall getTeacherParserRuleCall_0() { return cTeacherParserRuleCall_0; }
		
		//Student
		public RuleCall getStudentParserRuleCall_1() { return cStudentParserRuleCall_1; }
	}
	public class HomeworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.Homework");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHomeworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHomeworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescribeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescribeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescribeEStringParserRuleCall_3_1_0 = (RuleCall)cDescribeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Homework returns Homework:
		//    {Homework}
		//    'Homework'
		//    '{'
		//        ('Describe' Describe=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Homework}
		//'Homework'
		//'{'
		//    ('Describe' Describe=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Homework}
		public Action getHomeworkAction_0() { return cHomeworkAction_0; }
		
		//'Homework'
		public Keyword getHomeworkKeyword_1() { return cHomeworkKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Describe' Describe=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Describe'
		public Keyword getDescribeKeyword_3_0() { return cDescribeKeyword_3_0; }
		
		//Describe=EString
		public Assignment getDescribeAssignment_3_1() { return cDescribeAssignment_3_1; }
		
		//EString
		public RuleCall getDescribeEStringParserRuleCall_3_1_0() { return cDescribeEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class TeacherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.Teacher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTeacherAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTeacherKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStudentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cStudentAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cStudentPersonCrossReference_4_2_0 = (CrossReference)cStudentAssignment_4_2.eContents().get(0);
		private final RuleCall cStudentPersonEStringParserRuleCall_4_2_0_1 = (RuleCall)cStudentPersonCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cStudentAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cStudentPersonCrossReference_4_3_1_0 = (CrossReference)cStudentAssignment_4_3_1.eContents().get(0);
		private final RuleCall cStudentPersonEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cStudentPersonCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTeacherKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTeacherAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTeacherPersonCrossReference_5_1_0 = (CrossReference)cTeacherAssignment_5_1.eContents().get(0);
		private final RuleCall cTeacherPersonEStringParserRuleCall_5_1_0_1 = (RuleCall)cTeacherPersonCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Teacher returns Teacher:
		//    {Teacher}
		//    'Teacher'
		//    name=EString
		//    '{'
		//        ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		//        ('teacher' teacher=[Person|EString])?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Teacher}
		//'Teacher'
		//name=EString
		//'{'
		//    ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		//    ('teacher' teacher=[Person|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Teacher}
		public Action getTeacherAction_0() { return cTeacherAction_0; }
		
		//'Teacher'
		public Keyword getTeacherKeyword_1() { return cTeacherKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'student'
		public Keyword getStudentKeyword_4_0() { return cStudentKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//student+=[Person|EString]
		public Assignment getStudentAssignment_4_2() { return cStudentAssignment_4_2; }
		
		//[Person|EString]
		public CrossReference getStudentPersonCrossReference_4_2_0() { return cStudentPersonCrossReference_4_2_0; }
		
		//EString
		public RuleCall getStudentPersonEStringParserRuleCall_4_2_0_1() { return cStudentPersonEStringParserRuleCall_4_2_0_1; }
		
		//( "," student+=[Person|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//student+=[Person|EString]
		public Assignment getStudentAssignment_4_3_1() { return cStudentAssignment_4_3_1; }
		
		//[Person|EString]
		public CrossReference getStudentPersonCrossReference_4_3_1_0() { return cStudentPersonCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getStudentPersonEStringParserRuleCall_4_3_1_0_1() { return cStudentPersonEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('teacher' teacher=[Person|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'teacher'
		public Keyword getTeacherKeyword_5_0() { return cTeacherKeyword_5_0; }
		
		//teacher=[Person|EString]
		public Assignment getTeacherAssignment_5_1() { return cTeacherAssignment_5_1; }
		
		//[Person|EString]
		public CrossReference getTeacherPersonCrossReference_5_1_0() { return cTeacherPersonCrossReference_5_1_0; }
		
		//EString
		public RuleCall getTeacherPersonEStringParserRuleCall_5_1_0_1() { return cTeacherPersonEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class StudentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "homework.Dsl.Student");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStudentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStudentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStudentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cStudentAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cStudentPersonCrossReference_4_2_0 = (CrossReference)cStudentAssignment_4_2.eContents().get(0);
		private final RuleCall cStudentPersonEStringParserRuleCall_4_2_0_1 = (RuleCall)cStudentPersonCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cStudentAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cStudentPersonCrossReference_4_3_1_0 = (CrossReference)cStudentAssignment_4_3_1.eContents().get(0);
		private final RuleCall cStudentPersonEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cStudentPersonCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTeacherKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTeacherAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTeacherPersonCrossReference_5_1_0 = (CrossReference)cTeacherAssignment_5_1.eContents().get(0);
		private final RuleCall cTeacherPersonEStringParserRuleCall_5_1_0_1 = (RuleCall)cTeacherPersonCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Student returns Student:
		//    {Student}
		//    'Student'
		//    name=EString
		//    '{'
		//        ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		//        ('teacher' teacher=[Person|EString])?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Student}
		//'Student'
		//name=EString
		//'{'
		//    ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		//    ('teacher' teacher=[Person|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Student}
		public Action getStudentAction_0() { return cStudentAction_0; }
		
		//'Student'
		public Keyword getStudentKeyword_1() { return cStudentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'student'
		public Keyword getStudentKeyword_4_0() { return cStudentKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//student+=[Person|EString]
		public Assignment getStudentAssignment_4_2() { return cStudentAssignment_4_2; }
		
		//[Person|EString]
		public CrossReference getStudentPersonCrossReference_4_2_0() { return cStudentPersonCrossReference_4_2_0; }
		
		//EString
		public RuleCall getStudentPersonEStringParserRuleCall_4_2_0_1() { return cStudentPersonEStringParserRuleCall_4_2_0_1; }
		
		//( "," student+=[Person|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//student+=[Person|EString]
		public Assignment getStudentAssignment_4_3_1() { return cStudentAssignment_4_3_1; }
		
		//[Person|EString]
		public CrossReference getStudentPersonCrossReference_4_3_1_0() { return cStudentPersonCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getStudentPersonEStringParserRuleCall_4_3_1_0_1() { return cStudentPersonEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('teacher' teacher=[Person|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'teacher'
		public Keyword getTeacherKeyword_5_0() { return cTeacherKeyword_5_0; }
		
		//teacher=[Person|EString]
		public Assignment getTeacherAssignment_5_1() { return cTeacherAssignment_5_1; }
		
		//[Person|EString]
		public CrossReference getTeacherPersonCrossReference_5_1_0() { return cTeacherPersonCrossReference_5_1_0; }
		
		//EString
		public RuleCall getTeacherPersonEStringParserRuleCall_5_1_0_1() { return cTeacherPersonEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final CourseElements pCourse;
	private final PersonElements pPerson;
	private final HomeworkElements pHomework;
	private final EStringElements pEString;
	private final TeacherElements pTeacher;
	private final StudentElements pStudent;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCourse = new CourseElements();
		this.pPerson = new PersonElements();
		this.pHomework = new HomeworkElements();
		this.pEString = new EStringElements();
		this.pTeacher = new TeacherElements();
		this.pStudent = new StudentElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("homework.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Course returns Course:
	//    {Course}
	//    'Course'
	//    name=EString
	//    '{'
	//        ('homework' '{' homework+=Homework ( "," homework+=Homework)* '}' )?
	//        ('person' '{' person+=Person ( "," person+=Person)* '}' )?
	//    '}';
	public CourseElements getCourseAccess() {
		return pCourse;
	}
	
	public ParserRule getCourseRule() {
		return getCourseAccess().getRule();
	}
	
	//Person returns Person:
	//    Teacher | Student;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Homework returns Homework:
	//    {Homework}
	//    'Homework'
	//    '{'
	//        ('Describe' Describe=EString)?
	//    '}';
	public HomeworkElements getHomeworkAccess() {
		return pHomework;
	}
	
	public ParserRule getHomeworkRule() {
		return getHomeworkAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Teacher returns Teacher:
	//    {Teacher}
	//    'Teacher'
	//    name=EString
	//    '{'
	//        ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
	//        ('teacher' teacher=[Person|EString])?
	//    '}';
	public TeacherElements getTeacherAccess() {
		return pTeacher;
	}
	
	public ParserRule getTeacherRule() {
		return getTeacherAccess().getRule();
	}
	
	//Student returns Student:
	//    {Student}
	//    'Student'
	//    name=EString
	//    '{'
	//        ('student' '(' student+=[Person|EString] ( "," student+=[Person|EString])* ')' )?
	//        ('teacher' teacher=[Person|EString])?
	//    '}';
	public StudentElements getStudentAccess() {
		return pStudent;
	}
	
	public ParserRule getStudentRule() {
		return getStudentAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
