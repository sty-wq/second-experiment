/*
 * generated by Xtext 2.25.0
 */
package homework.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import homework.ide.contentassist.antlr.internal.InternalDslParser;
import homework.services.DslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPersonAccess().getAlternatives(), "rule__Person__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getCourseAccess().getGroup(), "rule__Course__Group__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_4(), "rule__Course__Group_4__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_4_3(), "rule__Course__Group_4_3__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_5(), "rule__Course__Group_5__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_5_3(), "rule__Course__Group_5_3__0");
			builder.put(grammarAccess.getHomeworkAccess().getGroup(), "rule__Homework__Group__0");
			builder.put(grammarAccess.getHomeworkAccess().getGroup_3(), "rule__Homework__Group_3__0");
			builder.put(grammarAccess.getTeacherAccess().getGroup(), "rule__Teacher__Group__0");
			builder.put(grammarAccess.getTeacherAccess().getGroup_4(), "rule__Teacher__Group_4__0");
			builder.put(grammarAccess.getTeacherAccess().getGroup_4_3(), "rule__Teacher__Group_4_3__0");
			builder.put(grammarAccess.getTeacherAccess().getGroup_5(), "rule__Teacher__Group_5__0");
			builder.put(grammarAccess.getStudentAccess().getGroup(), "rule__Student__Group__0");
			builder.put(grammarAccess.getStudentAccess().getGroup_4(), "rule__Student__Group_4__0");
			builder.put(grammarAccess.getStudentAccess().getGroup_4_3(), "rule__Student__Group_4_3__0");
			builder.put(grammarAccess.getStudentAccess().getGroup_5(), "rule__Student__Group_5__0");
			builder.put(grammarAccess.getCourseAccess().getNameAssignment_2(), "rule__Course__NameAssignment_2");
			builder.put(grammarAccess.getCourseAccess().getHomeworkAssignment_4_2(), "rule__Course__HomeworkAssignment_4_2");
			builder.put(grammarAccess.getCourseAccess().getHomeworkAssignment_4_3_1(), "rule__Course__HomeworkAssignment_4_3_1");
			builder.put(grammarAccess.getCourseAccess().getPersonAssignment_5_2(), "rule__Course__PersonAssignment_5_2");
			builder.put(grammarAccess.getCourseAccess().getPersonAssignment_5_3_1(), "rule__Course__PersonAssignment_5_3_1");
			builder.put(grammarAccess.getHomeworkAccess().getDescribeAssignment_3_1(), "rule__Homework__DescribeAssignment_3_1");
			builder.put(grammarAccess.getTeacherAccess().getNameAssignment_2(), "rule__Teacher__NameAssignment_2");
			builder.put(grammarAccess.getTeacherAccess().getStudentAssignment_4_2(), "rule__Teacher__StudentAssignment_4_2");
			builder.put(grammarAccess.getTeacherAccess().getStudentAssignment_4_3_1(), "rule__Teacher__StudentAssignment_4_3_1");
			builder.put(grammarAccess.getTeacherAccess().getTeacherAssignment_5_1(), "rule__Teacher__TeacherAssignment_5_1");
			builder.put(grammarAccess.getStudentAccess().getNameAssignment_2(), "rule__Student__NameAssignment_2");
			builder.put(grammarAccess.getStudentAccess().getStudentAssignment_4_2(), "rule__Student__StudentAssignment_4_2");
			builder.put(grammarAccess.getStudentAccess().getStudentAssignment_4_3_1(), "rule__Student__StudentAssignment_4_3_1");
			builder.put(grammarAccess.getStudentAccess().getTeacherAssignment_5_1(), "rule__Student__TeacherAssignment_5_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DslGrammarAccess grammarAccess;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
